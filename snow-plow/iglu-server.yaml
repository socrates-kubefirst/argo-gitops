# Namespace Creation (if not already created)
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: snowplow

---

# Iglu PostgreSQL Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: iglu-postgres
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: iglu-postgres
#   template:
#     metadata:
#       labels:
#         app: iglu-postgres
#     spec:
#       containers:
#       - name: iglu-postgres
#         image: postgres:13
#         ports:
#         - containerPort: 5432
#         env:
#         - name: POSTGRES_USER
#           value: sp_user
#         - name: POSTGRES_PASSWORD
#           value: sp_password
#         - name: POSTGRES_DB
#           value: igludb
#         volumeMounts:
#         - name: pgdata
#           mountPath: /var/lib/postgresql/data
#           subPath: pgdata
#       volumes:
#       - name: pgdata
#         persistentVolumeClaim:
#           claimName: pgdata-pvc

---

# Iglu PostgreSQL Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: iglu-postgres
#   namespace: default
# spec:
#   selector:
#     app: iglu-postgres
#   ports:
#   - protocol: TCP
#     port: 5432
#     targetPort: 5432

---

# PersistentVolumeClaim for Iglu PostgreSQL
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pgdata-pvc
#   namespace: default
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi

---

# Iglu Database Initialization Job
#uncomment for localdb
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: iglu-db-init
#   namespace: snowplow
# spec:
#   template:
#     spec:
#       initContainers:
#       - name: wait-for-postgres
#         image: postgres:13
#         command: ['sh', '-c', 'until pg_isready -h iglu-postgres.snowplow.svc.cluster.local -U sp_user -d igludb; do echo waiting for postgres; sleep 2; done']
#         env:
#         - name: POSTGRES_USER
#           value: sp_user
#         - name: POSTGRES_PASSWORD
#           value: sp_password
#       containers:
#       - name: iglu-db-init
#         image: postgres:13
#         command: ["/bin/sh", "-c"]
#         args:
#           - |
#             PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -d $POSTGRES_DB -h iglu-postgres.snowplow.svc.cluster.local -c "
#             CREATE TABLE IF NOT EXISTS public.iglu_schemas (
#               vendor VARCHAR(128) NOT NULL,
#               name VARCHAR(128) NOT NULL,
#               format VARCHAR(128) NOT NULL,
#               model INTEGER NOT NULL,
#               revision INTEGER NOT NULL,
#               addition INTEGER NOT NULL,
#               created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
#               updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
#               is_public BOOLEAN NOT NULL,
#               body JSON NOT NULL,
#               superseded_by VARCHAR(128)
#             );

#             CREATE SCHEMA IF NOT EXISTS atomic;

#             CREATE TABLE atomic.events (
#               app_id TEXT,
#               platform TEXT,
#               etl_tstamp VARCHAR,
#               collector_tstamp VARCHAR,
#               dvce_created_tstamp VARCHAR,
#               event TEXT,
#               event_id VARCHAR,
#               txn_id VARCHAR,
#               name_tracker TEXT,
#               v_tracker TEXT,
#               v_collector TEXT,
#               v_etl TEXT,
#               user_fingerprint TEXT,
#               user_ipaddress TEXT,
#               domain_userid TEXT,
#               domain_sessionidx VARCHAR,
#               network_userid TEXT,
#               geo_country TEXT,
#               geo_region TEXT,
#               geo_city TEXT,
#               geo_zipcode TEXT,
#               geo_latitude VARCHAR,
#               geo_longitude VARCHAR,
#               geo_region_name TEXT,
#               ip_isp TEXT,
#               ip_organization TEXT,
#               ip_domain TEXT,
#               ip_netspeed TEXT,
#               page_url TEXT,
#               page_title TEXT,
#               page_referrer TEXT,
#               page_urlscheme TEXT,
#               page_urlhost TEXT,
#               page_urlport VARCHAR,
#               page_urlpath TEXT,
#               page_urlquery TEXT,
#               page_urlfragment TEXT,
#               refr_urlscheme TEXT,
#               refr_urlhost TEXT,
#               refr_urlport VARCHAR,
#               refr_urlpath TEXT,
#               refr_urlquery TEXT,
#               refr_urlfragment TEXT,
#               refr_medium TEXT,
#               refr_source TEXT,
#               refr_term TEXT,
#               mkt_medium TEXT,
#               mkt_source TEXT,
#               mkt_term TEXT,
#               mkt_content TEXT,
#               mkt_campaign TEXT,
#               contexts TEXT,
#               se_category TEXT,
#               se_action TEXT,
#               se_label TEXT,
#               se_property TEXT,
#               se_value VARCHAR,
#               unstruct_event TEXT,
#               tr_orderid TEXT,
#               tr_affiliation TEXT,
#               tr_total VARCHAR,
#               tr_tax VARCHAR,
#               tr_shipping VARCHAR,
#               tr_city TEXT,
#               tr_state TEXT,
#               tr_country TEXT,
#               ti_orderid TEXT,
#               ti_sku TEXT,
#               ti_name TEXT,
#               ti_category TEXT,
#               ti_price VARCHAR,
#               ti_quantity VARCHAR,
#               pp_xoffset_min VARCHAR,
#               pp_xoffset_max VARCHAR,
#               pp_yoffset_min VARCHAR,
#               pp_yoffset_max VARCHAR,
#               useragent TEXT,
#               br_name TEXT,
#               br_family TEXT,
#               br_version TEXT,
#               br_type TEXT,
#               br_renderengine TEXT,
#               br_lang TEXT,
#               br_features_pdf VARCHAR,
#               br_features_flash VARCHAR,
#               br_features_java VARCHAR,
#               br_features_director VARCHAR,
#               br_features_quicktime VARCHAR,
#               br_features_realplayer VARCHAR,
#               br_features_windowsmedia VARCHAR,
#               br_features_gears VARCHAR,
#               br_features_silverlight VARCHAR,
#               br_cookies VARCHAR,
#               br_colordepth TEXT,
#               br_viewwidth VARCHAR,
#               br_viewheight VARCHAR,
#               os_name TEXT,
#               os_family TEXT,
#               os_manufacturer TEXT,
#               os_timezone TEXT,
#               dvce_type TEXT,
#               dvce_ismobile VARCHAR,
#               dvce_screenwidth VARCHAR,
#               dvce_screenheight VARCHAR,
#               doc_charset TEXT,
#               doc_width VARCHAR,
#               doc_height VARCHAR,
#               tr_currency TEXT,
#               tr_total_base VARCHAR,
#               tr_tax_base VARCHAR,
#               tr_shipping_base VARCHAR,
#               ti_currency TEXT,
#               ti_price_base VARCHAR,
#               base_currency TEXT,
#               geo_timezone TEXT,
#               mkt_clickid TEXT,
#               mkt_network TEXT,
#               etl_tags TEXT,
#               dvce_sent_tstamp VARCHAR,
#               refr_domain_userid TEXT,
#               refr_device_tstamp VARCHAR,
#               domain_sessionid TEXT,
#               derived_tstamp VARCHAR,
#               event_vendor TEXT,
#               event_name TEXT,
#               event_format TEXT,
#               event_version TEXT,
#               event_fingerprint TEXT,
#               true_tstamp VARCHAR,
#               -- Additional fields to make up to 130 columns
#               custom_field1 TEXT,
#               custom_field2 TEXT,
#               custom_field3 TEXT,
#               custom_field4 TEXT,
#               custom_field5 TEXT,
#               custom_field6 TEXT,
#               custom_field7 TEXT,
#               custom_field8 TEXT,
#               custom_field9 TEXT,
#               custom_field10 TEXT,
#               custom_field11 TEXT,
#               custom_field12 TEXT,
#               custom_field13 TEXT,
#               custom_field14 TEXT,
#               custom_field15 TEXT,
#               custom_field16 TEXT,
#               custom_field17 TEXT,
#               custom_field18 TEXT,
#               custom_field19 TEXT,
#               custom_field20 TEXT
#             );
#             "
#         env:
#         - name: POSTGRES_USER
#           value: sp_user
#         - name: POSTGRES_PASSWORD
#           value: sp_password
#         - name: POSTGRES_DB
#           value: igludb
#       restartPolicy: OnFailure

---

---

# Iglu Server ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: iglu-server-config
  namespace: default
data:
  config.hocon: |
    {
      "repoServer": {
        "interface": "0.0.0.0",
        "port": 8081
      },
      "database": {
        "host": "ep-proud-snow-a55l1fw5.us-east-2.aws.neon.tech",
        "dbname": "igludb",
        "username": "igludb_owner",
        "password": "gMLZHXJl4d2q"
      },
      "superApiKey": "e5d6a3d6-7b3c-4d0a-9e6a-123456789abc",
      "adminApiKeys": [
        {
          "uid": "admin",
          "key": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "permissions": ["schemas:create", "schemas:read", "schemas:update", "schemas:delete", "apikeys:create", "apikeys:read", "apikeys:update", "apikeys:delete"]
        }
      ]
    }

---

# Iglu Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iglu-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iglu-server
  template:
    metadata:
      labels:
        app: iglu-server
    spec:
      # initContainers:
      # - name: wait-for-db-init
      #   image: postgres:13
      #   command: ['sh', '-c', 'until pg_isready -h iglu-postgres.default.svc.cluster.local -U sp_user -d igludb; do echo waiting for postgres; sleep 2; done']
      #   env:
      #   - name: POSTGRES_USER
      #     value: sp_user
      #   - name: POSTGRES_PASSWORD
      #     value: sp_password
      containers:
      - name: iglu-server
        image: snowplow/iglu-server:0.10.1
        args: ["--config", "/snowplow/config/config.hocon"]
        ports:
        - containerPort: 8081
        volumeMounts:
        - name: config-volume
          mountPath: /snowplow/config/config.hocon
          subPath: config.hocon
        env:
        - name: SP_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
      volumes:
      - name: config-volume
        configMap:
          name: iglu-server-config
          items:
          - key: config.hocon
            path: config.hocon

---

# Iglu Server Service
apiVersion: v1
kind: Service
metadata:
  name: iglu-server
  namespace: default
spec:
  selector:
    app: iglu-server
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: LoadBalancer

