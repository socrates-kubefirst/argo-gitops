---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: {{ .Values.namespace }}
spec:
  replicas: 3
  image:
    application: confluentinc/cp-server:{{ .Values.versionNumber }}
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 20Gi
  metricReporter:
    enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.{{ .Values.namespace }}.svc.cluster.local:2181
  ports:
{{- range .Values.kafka.ports }}
    - containerPort: {{ .containerPort }}
      hostPort: {{ .hostPort }}
{{- end }}
  env:
{{- range $key, $value := .Values.kafka.environment }}
    - name: {{ $key }}
      value: "{{ $value }}"
{{- end }}
  podTemplate:
    initContainers:
{{- if .Values.kafka.initContainers.enabled }}
      - name: create-topics
        image: confluentinc/cp-kafka:{{ .Values.versionNumber }}
        command:
          - sh
          - -c
          - >
            for topic in {{ range .Values.kafka.initContainers.topics }}{{ .name }}={{ .partitions }}={{ .replicationFactor }}; {{ end }}
            do
              IFS="="; set -- $topic;
              /usr/bin/kafka-topics --create --if-not-exists --zookeeper {{ .Values.kafka.environment.KAFKA_ZOOKEEPER_CONNECT }} --replication-factor $3 --partitions $2 --topic $1;
            done
{{- end }}
